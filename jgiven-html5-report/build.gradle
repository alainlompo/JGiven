import org.apache.tools.ant.filters.ReplaceTokens
import org.gradle.internal.os.OperatingSystem;

dependencies {
    compile project(path: ':jgiven-core', configuration: 'shadow')
}


def appDir = "${buildDir}/app/"
def bowerComponentsDir = "${buildDir}/bower_components/"

task bowerUpdate(type: CrossPlatformExec) {
    buildCommand('bower', 'install')
    inputs.file 'bower.json'
    outputs.dir bowerComponentsDir
}

task npmInstall(type: CrossPlatformExec) {
    buildCommand('npm', 'install')
}

task npmTest(type: CrossPlatformExec, dependsOn: npmInstall) {
    buildCommand('npm', 'test')
}

test.finalizedBy(npmTest)

task copyFontFiles(type: Copy) {
    from bowerComponentsDir + 'fontawesome/fonts'
    into appDir + 'fonts'
}

task deleteCssFiles(type: Delete) {
    delete appDir + 'css'
}

task copyCssFiles(type: Copy) {
    from bowerComponentsDir
    include '**/normalize.css'
    include '**/foundation.css'
    include '**/font-awesome.min.css'
    include '**/angular-chart.css'
    include 'datatables.net-zf/css/dataTables.foundation.min.css'
    into appDir + 'css'
    includeEmptyDirs = false
    eachFile { details ->
        details.path = details.name
    }
}

task copyJsFiles(type: Copy) {
    from bowerComponentsDir
    include 'lodash/dist/lodash.min.js'
    include '**/modernizr.js'
    include 'foundation/**/placeholder.js'
    include 'fastclick/lib/fastclick.js'
    include 'jquery/**/jquery.min.js'
    include 'Chart.js/Chart.min.js'
    include 'foundation/js/foundation.min.js'
    include 'angular/angular.min.js'
    include 'angular-sanitize/angular-sanitize.min.js'
    include 'angular-chart.js/dist/angular-chart.min.js'
    include 'angular-local-storage/dist/angular-local-storage.min.js'
    include 'angular-foundation/mm-foundation-tpls.min.js'
    include 'angular-bindonce/bindonce.min.js'
    include 'pako/dist/pako_inflate.min.js'
    into appDir + 'js'
    includeEmptyDirs = false
    eachFile { details ->
        details.path = details.name
    }
}

task copyImageFiles(type: Copy) {
    from bowerComponentsDir
    include 'datatables.net-dt/images/*.png'
    into appDir + 'images'
    includeEmptyDirs = false
    eachFile { details ->
        details.path = details.name
    }
}

task copyAppFiles(type: Copy) {
    from 'src/app'
    into appDir
    filter(ReplaceTokens, tokens: [version: version])
}

copyJsFiles.dependsOn bowerUpdate
copyCssFiles.dependsOn bowerUpdate, deleteCssFiles
copyImageFiles.dependsOn bowerUpdate
copyFontFiles.dependsOn bowerUpdate
copyAppFiles.dependsOn deleteCssFiles

task zipAppDir(type: Zip, dependsOn: [copyJsFiles, copyCssFiles, copyFontFiles, copyImageFiles, copyAppFiles]) {
    from appDir
    archiveName = 'app.zip'
    destinationDir = new File(buildDir, 'resources/main/com/tngtech/jgiven/report/html5')
}

jar.dependsOn zipAppDir

class CrossPlatformExec extends Exec {
    void buildCommand(String command, String... commandArgs) {
        if(OperatingSystem.current().isWindows()) {
            executable = 'cmd'
            args = ['/c', command]
        } else {
            executable = command
        }
        args(commandArgs.toList());
    }
}
